% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dir-ignore.R
\name{projr_dir_ignore}
\alias{projr_dir_ignore}
\title{Update \code{.gitignore} and \code{.Rbuildignore} Using Projr Configuration}
\usage{
projr_dir_ignore(git_skip_adjust = NULL)
}
\arguments{
\item{git_skip_adjust}{A logical flag indicating whether to explicitly enable (\code{TRUE})
or disable (\code{FALSE}) Git skip-worktree adjustments for the managed directories, overriding
any settings from the project configuration. Defaults to \code{NULL}, which respects
the existing project configuration. If this is not set there either,
the effective default is \code{TRUE}.}
}
\description{
The \code{projr_dir_ignore()} function updates the project’s \code{.gitignore} and
\code{.Rbuildignore} files to reflect the directories managed by Projr.
}
\details{
The \code{projr_dir_ignore()} function updates the project’s \code{.gitignore} and
\code{.Rbuildignore} files to reflect the directories managed by Projr. It does so by:
\enumerate{
\item Removing any previously established Projr-managed ignore entries.
\item Re-inserting the correct ignores based on the current project configuration.
}

As a result, directories specified in the Projr YAML configuration are correctly
excluded from version control (Git) and R package building processes.

Optionally, you can control whether files within these directories should have
their Git skip-worktree flags adjusted. By default, \code{projr_dir_ignore()} will
respect the settings derived from the project configuration. However, you may
override this behavior using the \code{git_skip_adjust} argument.

\strong{Key Effects:}
\itemize{
\item Ensures \code{.gitignore} includes Projr-managed directories, keeping them out of Git commits.
\item Ensures \code{.Rbuildignore} excludes these directories from R build processes.
\item Optionally adjusts Git skip-worktree flags for tracked files in these directories.
}
}
