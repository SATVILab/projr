% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/init-std.R, R/init.R
\name{projr_init}
\alias{projr_init}
\alias{projr_init_all}
\alias{projr_init_renv}
\alias{projr_init_cite}
\alias{projr_init_git}
\alias{projr_init_license}
\title{Initialize a projr Project}
\usage{
projr_init(
  git = TRUE,
  git_commit = TRUE,
  github = TRUE,
  github_public = FALSE,
  github_org = NULL,
  dir = TRUE,
  readme = TRUE,
  readme_rmd = FALSE,
  desc = FALSE,
  license = NULL,
  projr_yml = FALSE,
  lit_doc = NULL
)

projr_init_all(github_org, license = NULL, lit_doc = NULL)

projr_init_renv(bioc = TRUE)

projr_init_cite()

projr_init_git(commit = TRUE, username = NULL, public = FALSE)

projr_init_license(license, first_name, last_name)
}
\arguments{
\item{git}{Logical. If \code{TRUE}, initializes a Git repository. Defaults to \code{TRUE}.}

\item{git_commit}{Logical. If \code{TRUE}, commits the initial changes to the Git repository.
Defaults to \code{TRUE}.}

\item{github}{Logical. If \code{TRUE}, attempts to create a GitHub repository for the project.
Defaults to \code{TRUE}.}

\item{github_public}{Logical. If \code{TRUE}, the GitHub repository will be public.
Defaults to \code{FALSE}.}

\item{github_org}{Character or \code{NULL}. The GitHub organization under which to create
the repository. Defaults to \code{NULL}.}

\item{dir}{Logical. If \code{TRUE}, initializes the projr-specified directories (e.g., raw,
cache, output). Defaults to \code{TRUE}.}

\item{readme}{Logical. If \code{TRUE}, creates a README file. Defaults to \code{TRUE}.}

\item{readme_rmd}{Logical. If \code{TRUE}, generates a README in R Markdown format
(\code{README.Rmd}); otherwise, a Markdown file (\code{README.md}) is created.
Defaults to \code{FALSE}.}

\item{desc}{Logical. If \code{TRUE}, creates a DESCRIPTION file for the project.
Defaults to \code{FALSE}.}

\item{license}{Character or \code{NULL}. Specifies the license to apply (e.g., \code{"ccby"},
\code{"apache"}, \code{"cc0"}, \code{"proprietary"}). Defaults to \code{NULL}.}

\item{projr_yml}{Logical. If \code{TRUE}, creates a \code{projr.yml} configuration file.
Defaults to \code{FALSE}.}

\item{lit_doc}{Character or \code{NULL}. Specifies the type of literate documentation to create.
Supported values are \code{"bookdown"}, \code{"project"}, \code{"quarto"}, and \code{"rmd"}.
Defaults to \code{NULL}.}

\item{bioc}{Logical. If \code{TRUE}, includes Bioconductor packages in the renv setup.
Defaults to \code{TRUE}.}

\item{renv}{Logical. If \code{TRUE}, initializes a renv environment for dependency management.
Defaults to \code{FALSE}.}
}
\value{
Invisibly returns \code{TRUE} if initialization is successful, or \code{FALSE} if
a particular step is skipped.
}
\description{
This function performs a full initialization of a projr project. It sets up the project
structure by creating directories, generating a README (in Markdown or R Markdown format),
configuring a renv environment, writing a DESCRIPTION file, applying a license (if provided),
setting up citation files, creating a projr configuration YAML file, establishing literate documentation,
and configuring both Git and GitHub repositories.
}
\details{
The \code{projr_init} function is a wrapper that calls several helper functions to
perform the following tasks:
\itemize{
\item Prevent working directory errors by ensuring the \pkg{usethis} project is set.
\item Create project directories.
\item Generate a README file (in Markdown or R Markdown format).
\item Initialize a renv environment, optionally with Bioconductor support.
\item Write a DESCRIPTION file for project metadata.
\item Apply a specified license.
\item Configure citation files (if a DESCRIPTION file exists).
\item Create a projr configuration YAML file.
\item Set up literate documentation in the chosen format.
\item Initialize Git (and optionally commit initial changes).
\item Create a GitHub repository if requested.
}
}
