% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/renv.R
\name{projr_renv_restore}
\alias{projr_renv_restore}
\alias{projr_renv_update}
\alias{projr_renv_restore_and_update}
\title{Restore or Update renv Lockfile Packages}
\usage{
projr_renv_restore(
  github = TRUE,
  non_github = TRUE,
  biocmanager_install = FALSE
)

projr_renv_update(
  github = TRUE,
  non_github = TRUE,
  biocmanager_install = FALSE
)

projr_renv_restore_and_update(
  github = TRUE,
  non_github = TRUE,
  biocmanager_install = FALSE
)
}
\arguments{
\item{github}{Logical. Whether to process GitHub packages. Default is \code{TRUE}.}

\item{non_github}{Logical. Whether to process non-GitHub packages (CRAN and Bioconductor). Default is \code{TRUE}.}

\item{biocmanager_install}{Logical.
If \code{TRUE}, Bioconductor packages will be installed using \code{BiocManager::install}; otherwise,
\code{renv::install("bioc::<package_name>")} will be used.
Default is \code{FALSE}.}
}
\value{
Invisibly returns \code{TRUE} upon successful completion.
}
\description{
Functions to manage the restoration and updating of packages specified in the \code{renv} lockfile.
\itemize{
\item .renv_restore()`: Restores packages from the lockfile, attempting to install the lockfile versions.
\item .renv_update()`: Updates packages to their latest available versions, ignoring the lockfile versions.
\item .renv_restore_and_update()`: First restores packages from the lockfile, then updates them to the latest versions.
}
}
\details{
Control whether to process GitHub packages, non-GitHub packages (CRAN and Bioconductor), or both using the \code{github} and \code{non_github} arguments.
}
\examples{
\dontrun{
# Restore all packages
.renv_restore()

# Update all packages
.renv_update()

# Restore and then update all packages
.renv_restore_and_update()

# Only restore non-GitHub packages
.renv_restore(github = FALSE)

# Only update GitHub packages
.renv_update(non_github = FALSE)
}

}
