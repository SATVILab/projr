% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/renv.R
\name{projr_renv_test}
\alias{projr_renv_test}
\title{Test renv restore}
\usage{
projr_renv_test(files_to_copy = NULL, delete_lib = TRUE)
}
\arguments{
\item{files_to_copy}{character vector.
Paths to files to copy into the temporary directory before restoring.
Note that \code{renv.lock} is always copied.}

\item{delete_lib}{Logical.
If \code{TRUE}, the restored library path is deleted after the test.
Default is \code{TRUE}.}
}
\value{
\code{TRUE} if \code{renv::restore()} succeeds, \code{FALSE} otherwise.
}
\description{
Tests \code{renv::restore()} without using the cache in a clean, temporary environment.
Automatically creates a temporary project directory, initializes \code{renv},
copies required files, disables the cache via \code{.Rprofile}, and then performs \code{renv::restore()}.
Afterwards, it deletes the first library path where \code{renv} restored packages.

\strong{Note:}
To ensure isolation, the test runs in a directory that is completely separate
from the parent project and executes \code{Rscript} with the \code{--vanilla} option.
The \code{--vanilla} flag seems essential to prevent the project
\code{renv} settings from being affected by testing.
}
