% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/yml-dest-wrapper.R
\name{projr_yml_dest_add_github}
\alias{projr_yml_dest_add_github}
\title{Add a GitHub release as a destination}
\usage{
projr_yml_dest_add_github(
  title,
  content,
  structure = NULL,
  overwrite = TRUE,
  send_cue = NULL,
  send_strategy = NULL,
  send_version_source = NULL,
  send_conflict = NULL,
  profile = "default"
)
}
\arguments{
\item{title}{character.
Title of the GitHub release.
Can use title as \verb{@version},
in which case the release will be entitled
the version of the project at the time.
If not supplied, then will
automatically be generated from \code{content}.}

\item{content}{character vector.
Labels of directories to include in the upload.
Options are the labels of directories
in the active \code{projr} configuration,
as well as "docs", "data" and "code".
"docs" means the directory where the documents are rendered to,
"data" means the files in the \code{"data"} directory,
and "code" means all files tracked by the Git repository.}

\item{structure}{"latest" or "version".
Structure of the remote.
If "latest", then \code{path} simply contains
the latest versions of the contents.
If "version", then \code{path} will contain
a directory for each version.
If not supplied, will be \code{version}.}

\item{overwrite}{logical.
Whether to rewrite an existing entry of the same
title in the specified \code{projr} configuration file.
Default is TRUE.}

\item{send_cue}{TRUE/FALSE, or one of "build", "dev", "patch",
"minor" or "major".
Minimum component bumped in a project build to initiate
the upload.
If \code{TRUE}, then will be set to \code{"patch"}.
If \code{FALSE}, then will never be uploaded.
If \code{"build"}, then will be uploaded on every build,
including \code{dev} builds, so \code{dev} and \code{"build"} are equivalent.}

\item{send_strategy}{"upload-all", "upload-missing",
"sync-using-deletiong" and "sync-using-version".
How to synchronise to the remote.
If \code{upload-all}, then all files are uploaded.
If \code{upload-missing}, then only missing files are uploaded.
If \code{sync-using-deletion}, then all files on the remote
are deleted before uploading all local files.
If \code{sync-using-version}, then files
that have changed or been added locally are uploaded to the remote,
and files that have been removed locally are removed from the remote.
If not set, then "sync-using-version" will be used.}

\item{send_version_source}{"manifest" or "file".
For \code{sync-using-version} synchronisation approach,
whether to use the recorded versions of objects to
determine what has changed  ("manifest"),
or to download everything from the remote, version it
and compare it to what's in the local folder ("file").
If not set, then "manifest" is used.}

\item{send_conflict}{"overwrite", "error" or "skip".
What to do if a file that is to be uploaded
to the remote is already on the remote.
Default is "overwrite".}

\item{profile}{character.
Profile to write the settings to.
If "default", then written to \verb{_projr.yml},
otherwise written to \verb{_projr-<profile>.yml}.
The default is "default".}
}
\description{
Add a GitHub release as a destination
to a _projr.yml file.
}
