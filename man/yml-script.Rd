% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/yml-script.R
\name{projr_yml_script_add}
\alias{projr_yml_script_add}
\alias{projr_yml_script_rm}
\alias{projr_yml_script_rm_all}
\alias{projr_yml_script_add_pre}
\alias{projr_yml_script_add_post}
\title{Build script-related functions}
\usage{
projr_yml_script_add(
  path,
  title,
  stage,
  cue = NULL,
  overwrite = TRUE,
  profile = "default"
)

projr_yml_script_rm(title, path = NULL, profile = "default")

projr_yml_script_rm_all(profile = "default")

projr_yml_script_add_pre(
  path,
  title,
  cue = NULL,
  overwrite = TRUE,
  profile = "default"
)

projr_yml_script_add_post(
  path,
  title,
  cue = NULL,
  overwrite = TRUE,
  profile = "default"
)
}
\arguments{
\item{path}{character vector.
Path(s) to scripts, relative to project root (if not absolute).}

\item{title}{character.
Title for set of scripts.
Initial and trailing spaces are removed, and
the middle spaces are converted to dashes.
For example, \code{" a b "} is converted to
\code{"a-b"}. `}

\item{stage}{"pre" or "post".
Whether to run the script before or after the build.}

\item{cue}{"build", "dev", "patch", "minor" or "major".
Which minimum build level triggers the scripts.
"build" and "dev" are equivalent, and
always trigger the scripts.}

\item{overwrite}{logical.
Whether to overwrite any script settings
of the same title in the \code{projr}
configuration file.
If \code{FALSE} and there already exists
a key under \code{build/script} with the name
\code{title}, an error is thrown.
Default is \code{TRUE}.}

\item{profile}{character.
Profile to add the script to.
If \verb{"default"`` (the default), the script is added to the default profile, which is }_projr.yml`.}
}
\description{
Convenience functions to add or remove scripts
to run before or after the build.
\itemize{
\item \code{projr_yml_script_add}: Add a script to run before or after the build.
\item \code{projr_yml_script_rm}: Remove scripts to run.
}

\code{projr_yml_script_add_pre} and \code{projr_yml_script_add_post}
are wrappers around \code{projr_yml_script_add} that set the \code{stage} argument
to \code{"pre"} or \code{"post"}, respectively.
\code{projr_yml_script_rm_all} removes all scripts.
}
\details{
Within a stage (pre- or post-build), scripts
are run in the order set in \verb{_projr.yml}.
They are not run in the same environment as the
build process.
The pre-build scripts are run immediately after
bumping the project version (if that is done) and immediately
before committing the present state of the code to Git.
The post-build scripts are run immediately after
committing the present state of the code to Git,
and before distributing project artefacts to the remotes.
}
