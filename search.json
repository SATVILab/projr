[{"path":"https://satvilab.github.io/projr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 projr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":[]},{"path":"https://satvilab.github.io/projr/articles/cloud-storage.html","id":"github-releases","dir":"Articles","previous_headings":"Introduction","what":"GitHub releases","title":"Storing and downloading project artefacts on the cloud","text":"GitHub releases available ","code":""},{"path":"https://satvilab.github.io/projr/articles/details-gemini.html","id":"understanding-the-projr-workflow","dir":"Articles","previous_headings":"","what":"Understanding the projr Workflow","title":"Streamlining Your Project Workflow with `projr`","text":"’ll Learn: projr structures project clarity easy sharing. core functions building refining project. Simple steps connect project GitHub.","code":""},{"path":"https://satvilab.github.io/projr/articles/details-gemini.html","id":"the-heart-of-projr-the-_projr-yml-file","dir":"Articles","previous_headings":"Understanding the projr Workflow","what":"The Heart of projr: The _projr.yml File","title":"Streamlining Your Project Workflow with `projr`","text":"file project’s command center. Let’s break key sections: Purpose: Defines essential project components live. raw-data: untouched, original data. cache: Temporary files created development. output: Final results want share (figures, tables, etc.). docs: Rendered documents (HTML, PDF). Organized structure ’s easy understand. Simplifies sharing specific parts project. projr can smartly manage protect outputs. Use projr_path_get() find folders. Example: projr_path_get(\"raw-data\") return path raw-data directory. Purpose: Automates tasks happen every time build project. Version Control (Git): Decides Git commits linked project versions. Uploads: Effortlessly shares data, outputs, documents GitHub, OSF, local folders.","code":""},{"path":"https://satvilab.github.io/projr/articles/details-gemini.html","id":"building-your-project-key-functions","dir":"Articles","previous_headings":"Understanding the projr Workflow","what":"Building Your Project: Key Functions","title":"Streamlining Your Project Workflow with `projr`","text":"Let’s look two functions heart building project: Purpose: development buddy! Renders code documents, results temporarily saved “cache” folder. Use : Test changes safely finalizing outputs. Purpose: final production step. saves results final locations handles versioning, uploads, tasks ’ve set _projr.yml.","code":""},{"path":"https://satvilab.github.io/projr/articles/details-gemini.html","id":"notes-on-git-and-github","dir":"Articles","previous_headings":"Understanding the projr Workflow","what":"Notes on Git and GitHub","title":"Streamlining Your Project Workflow with `projr`","text":"projr makes using Git easy, streamlining version control project sharing workflow. ’s connect project GitHub: Create free GitHub account: Sign GitHub: https://github.com. GitHub Credentials: Follow steps Happy Git R: https://happygitwithr.com/https-pat#tldr (See quick summary). Generate GitHub PAT: Copy generated token. Save Credentials: Paste Git credentials prompted.","code":"if (!requireNamespace(\"usethis\", quietly = TRUE)) {   install.packages(\"usethis\") } usethis::create_github_token() gitcreds::gitcreds_set()"},{"path":"https://satvilab.github.io/projr/articles/details-gemini.html","id":"next-steps","dir":"Articles","previous_headings":"Understanding the projr Workflow","what":"Next Steps","title":"Streamlining Your Project Workflow with `projr`","text":"Experiment: Create test project practice using projr. Customize: Tailor _projr.yml file match specific project’s needs. Check 3-directories 4-destination vignettes details! Integrate: Make projr natural part R workflow. Let’s transform projects chaotic streamlined!","code":""},{"path":"https://satvilab.github.io/projr/articles/environment-variables.html","id":"project-initialisation","dir":"Articles","previous_headings":"","what":"Project initialisation","title":"Environment variables","text":"environment variables make custom setup project easier. set, PROJR_PATH_YML specifies default location _projr.yml file. may overriden projr_init setting yml_path_from parameter. neither specified, default _projr.yml file used. remaining environment variables used pre-populate interactive setup prompts. set, user given options, may choose manually enter option instead. Multiple options may provided placing semi-colon , e.g. “John;JohnnyBoy” yields two options: “John” “JohnnyBoy”.","code":""},{"path":"https://satvilab.github.io/projr/articles/environment-variables.html","id":"project-builds","dir":"Articles","previous_headings":"","what":"Project builds","title":"Environment variables","text":"projr builds, projr mimicks treatment environment variables Quarto projects. Various files, prefixed _environment, specify default values environment variables used variables already set. variables originally set unset build. Environment files searched following order: Intended store user-specific, possibly private, environment variables, access tokens. file checked Git, automatically ignored projr. Intended store environment variables specific particular profile. QUARTO_PROFILE contains commas, strings commas treated separate profiles loaded order found QUARTO_PROFILE. Intended store environment variables common profiles. addition, _environment.required file set, environment variables specified inside checked existence. set, warnings printed (build aborted).","code":""},{"path":"https://satvilab.github.io/projr/articles/intro-gemini.html","id":"make-your-r-projects-reproducible-organized-and-shareable","dir":"Articles","previous_headings":"","what":"Make Your R Projects Reproducible, Organized, and Shareable","title":"Project in Chaos? Get Organized with `projr`!","text":"Let’s honest, organizing projects R can feel like herding cats. Code one place, raw data scattered around, don’t even get started trying remember exactly versions everything worked together. ’s projr steps streamline workflow.","code":""},{"path":"https://satvilab.github.io/projr/articles/intro-gemini.html","id":"what-is-projr","dir":"Articles","previous_headings":"Make Your R Projects Reproducible, Organized, and Shareable","what":"What is projr?","title":"Project in Chaos? Get Organized with `projr`!","text":"Think projr R project’s personal assistant. helps : Set consistent structure: “file go?” dilemmas. projr guides clear project layout. Track changes: Code changes? Data updates? projr automatically versions project, crystal-clear history. Collaborate seamlessly: Sharing work breeze built-tools version control (’ll take care tricky Git stuff !).","code":""},{"path":"https://satvilab.github.io/projr/articles/intro-gemini.html","id":"why-should-i-care","dir":"Articles","previous_headings":"Make Your R Projects Reproducible, Organized, and Shareable","what":"Why should I care?","title":"Project in Chaos? Get Organized with `projr`!","text":"Reproducibility: Anyone (including future self!) can easily rerun analysis right ingredients. Organization: well-organized project happy project. Find need, need . Collaboration: Work smoothly others, knowing project’s history files easily shared.","code":""},{"path":"https://satvilab.github.io/projr/articles/intro-gemini.html","id":"how-does-it-work-the-super-simplified-version","dir":"Articles","previous_headings":"Make Your R Projects Reproducible, Organized, and Shareable","what":"How does it work? (The Super-Simplified Version)","title":"Project in Chaos? Get Organized with `projr`!","text":"Start new project: projr_init() sets stage folders data, code, results. even connects GitHub want. Build project: projr_build_output() runs code, keeps track versions, neatly packages everything . ’s gist, projr can much . can automatically share project platforms like GitHub store locally – customizable simple configuration file.","code":""},{"path":"https://satvilab.github.io/projr/articles/intro-gemini.html","id":"ready-to-get-started","dir":"Articles","previous_headings":"Make Your R Projects Reproducible, Organized, and Shareable","what":"Ready to get started?","title":"Project in Chaos? Get Organized with `projr`!","text":"1. Install projr: 2. Open R desired project folder. (’re using RStudio, ’s easiest start new project right inside folder.) 3. Initialize project: Follow prompts, projr take care rest!","code":"if (!requireNamespace(\"remotes\", quietly = TRUE)) {   install.packages(\"remotes\") } remotes::install_github(\"SATVILab/projr\") library(projr) projr_init()"},{"path":"https://satvilab.github.io/projr/articles/intro-gemini.html","id":"building-your-project","dir":"Articles","previous_headings":"Make Your R Projects Reproducible, Organized, and Shareable","what":"Building Your Project","title":"Project in Chaos? Get Organized with `projr`!","text":"Now ’s time make project come alive! Test : Use projr_build_dev() run code see results look. great way catch errors go. Ready share? Use projr_build_output() create final version project. automatically version everything, package nicely, even share platforms like GitHub ’ve set .","code":""},{"path":"https://satvilab.github.io/projr/articles/intro-gemini.html","id":"where-can-i-save-my-stuff","dir":"Articles","previous_headings":"Make Your R Projects Reproducible, Organized, and Shareable","what":"Where can I save my stuff?","title":"Project in Chaos? Get Organized with `projr`!","text":"projr special configuration file (_projr.yml) tells store data, results, beautiful documents create. can customize fit workflow perfectly. Sound good? Let’s dive details next vignettes!","code":""},{"path":[]},{"path":[]},{"path":"https://satvilab.github.io/projr/articles/intro.html","id":"extreme-version","dir":"Articles","previous_headings":"Introduction > TL;DR","what":"Extreme version","title":"intro","text":"projr workflow: Initialisation: Run projr::projr_init() set project metadata, projr-specific configuration Git repo connected GitHub (choose). Building project: Run projr::projr_build_output() build project, version project components, upload components GitHub, OSF /local folder. Project directory structure (e.g. raw data kept raw-data folder) -build actions (e.g. uploading GitHub) specified _projr.yml file. three functions remember: projr_init(), projr_build_output() projr_path_get(). projr configuration file, _projr.yml, specifies project defaults appropriate majority projects, can customised needs.","code":""},{"path":"https://satvilab.github.io/projr/articles/intro.html","id":"less-extreme-version","dir":"Articles","previous_headings":"Introduction > TL;DR","what":"Less extreme version","title":"intro","text":"projr package helps set maintain project way reproducible, shareable versioned. sets project metadata, projr-specific configuration Git repo connected GitHub (choose). means can always find exact inputs used create outputs. renders literate programming documents project saves outputs temporary directory (workspace). saves outputs final destination (e.g. _output folder), regarded latest state project (rather development version). addition, component pverall project version bumped (e.g. v1.2.1 changes v2.0.0 major version bumped), individual project components (e.g. code, data, figures, documents) versioned linked new version. Finally, project components uploaded GitHub, OSF /local folder. _projr.yml file specifies project directory structure -build actions. directories key specifies project directory structure, terms raw data, outputs (intermediate final) rendered documents kept. build key specifies -build actions, whether code versioned, project components (raw data, outputs, docs) uploaded GitHub, OSF /local folder. three functions remember: projr_init(), projr_build_output() projr_path_get() (described later). projr configuration file, _projr.yml, specifies project defaults appropriate majority projects, highly customisable needs.","code":""},{"path":"https://satvilab.github.io/projr/articles/intro.html","id":"install-projr","dir":"Articles","previous_headings":"Introduction","what":"Install projr","title":"intro","text":"Install projr:","code":"if (!requireNamespace(\"remotes\", quietly = TRUE)) {   install.packages(\"remotes\") } remotes::install_github(\"SATVILab/projr\")"},{"path":[]},{"path":"https://satvilab.github.io/projr/articles/intro.html","id":"initialising-the-project","dir":"Articles","previous_headings":"Introduction > The projr workflow","what":"Initialising the project","title":"intro","text":"Open R working directory want use . using RStudio, easiest way open RStudio, click File, New Project choose whether want open existing directory create new one. Run projr::projr_init(). prompt metadata project, description well name email address. also able choose whether create Git repo , , whether use GitHub (already set use GitHub, see tips creating GitHub account) Overall, projr_init set project metadata, projr-specific configuration Git repo connected GitHub (choose).","code":""},{"path":[]},{"path":"https://satvilab.github.io/projr/articles/intro.html","id":"projr_build_output","dir":"Articles","previous_headings":"Introduction > The projr workflow > Building the project","what":"projr_build_output()","title":"intro","text":"One can build project using projr_build_output(). automatically detect whatever literate programming documents used (Rmd’s, Qmd’s, Quarto projects, bookdown projects) render . deafult, rendered documents (e.g. HTML, PDF) saved _docs directory.","code":""},{"path":[]},{"path":"https://satvilab.github.io/projr/articles/intro.html","id":"project-versioning","dir":"Articles","previous_headings":"","what":"intro","title":"intro","text":"project, whole, versioned. version specified DESCRIPTION file, updated automatically projr build. Semantic versioning used, version form x.y.z, x major version, y minor version z patch version. example, project version (build) might 0.1.0. patch version updated, version become 0.1.1. minor version updated, version become 0.2.0. major version updated, version become 1.0.0. helps communicate size changes made build. software development, patch version updated small changes, minor version new features major version breaking changes. analysis projects (including, e.g. data processing sub-projects), patch version might updated small changes, minor version new analyses major version changes data processing pipeline. ’s decide one means - just communicate collaborators.","code":""},{"path":"https://satvilab.github.io/projr/articles/intro.html","id":"component-versioning","dir":"Articles","previous_headings":"","what":"intro","title":"intro","text":"build, projr also versions project components (code, R packages files). ensures outputs (e.g. figures, tables documents) linked versioned inputs (e.g. raw data code). linked project version, can always find exact inputs used create outputs.","code":""},{"path":"https://satvilab.github.io/projr/articles/intro.html","id":"sharing-the-project","dir":"Articles","previous_headings":"Introduction > The projr workflow > Building the project","what":"Sharing the project","title":"intro","text":"Optionally, immediately build projr uploads components GitHub, OSF /local folder. example, default raw data, output (e.g. figures) rendered documents (e.g. HTMLs, PDFs)s uploaded GitHub GitHub releases. important understand exactly GitHub release point, note free, easy, secure way share non-code files (e.g. data, documents) others. done automatically build, highly customisable. Uploads Open Science Foundation (OSF) local folders also supported. understand customise process , ’s important familiarse projr configuration file, _projr.yml. Details options available later vignettes.","code":""},{"path":"https://satvilab.github.io/projr/articles/intro.html","id":"projr-yml","dir":"Articles","previous_headings":"Introduction","what":"_projr.yml","title":"intro","text":"projr configuration file, _projr.yml, specifies two main things: kept (e.g. folder contains raw data). falls directories key. project inputs outputs shared stored (e.g. GitHub, OSF local path). falls build key.","code":""},{"path":[]},{"path":"https://satvilab.github.io/projr/articles/intro.html","id":"structure","dir":"Articles","previous_headings":"Introduction > _projr.yml > directories","what":"Structure","title":"intro","text":"default directories key: purpose specify paths key folders project. follows: raw-data: folder raw data stored. cache: stores files created project builds want share. example, use R package targets cache intermediate output, cached intermediate output go . output: also stores files created project builds - want share, e.g. figures tables. docs: rendered documents stored, e.g. HTML PDF files. access paths folders, use projr_path_get function. example: return can given arguments, specifying sub-directories file names. example: return , code saving figure path might look like : future, path output folder changes _projr.yml (e.g. _output_figures instead _output), projr_path_get automatically update path. Essentially, projr_path_get replace either hardcoded paths (\"_output/figure/nobel_prize_winning_plot.png\") file.path/::calls.","code":"# default directory settings: directories:   raw-data:     path: _raw_data   cache:      path: _tmp   output:      path: _output   docs:     path: docs projr_path_get(\"output\") \"_output\" projr_path_get(\"output\", \"figure\", \"nobel_prize_winning_plot.png\") \"_output/figure/nobel_prize_winning_plot.png\" png(filename = projr_path_get(\"output\", \"figure\", \"nobel_prize_winning_plot.png\") # ... code to create the plot dev.off()"},{"path":"https://satvilab.github.io/projr/articles/intro.html","id":"benefits","dir":"Articles","previous_headings":"Introduction > _projr.yml > directories","what":"Benefits","title":"intro","text":"Using folders manner described (e.g. storing raw data raw-data folder outputs output folder) following benefits: person new project can read one file (_projr.yml) rather trawling source code understand project structure. Sharing parts project (e.g. raw data) setting project (e.g. new computer collaborator’s computer) easier like things kept together. opposed , example, keeping raw data _raw_data, others inst/extdata others root project, makes bringing pieces together harder. projr can “protect” output folder. projr_build_dev() function (described ) builds project, saves outputs cache folder rather output folder. prevents accidentally overwriting outputs previous successful build whilst iterating code preparation next build. projr can upload data various places. described next subsection (build), projr can send data folders (raw-data, output, etc.) various places - present, includes GitHub releases, OSF local folders (e.g. OneDrive project folder). projr can automatically ignore large files Git. don’t understand means, don’t worry - fact, ’s great ’re means projr can help use incredibly useful versioning tool Git without understand details. benefits, rely understanding advanced projr features, covered vignette.","code":""},{"path":"https://satvilab.github.io/projr/articles/intro.html","id":"build","dir":"Articles","previous_headings":"Introduction > _projr.yml","what":"build","title":"intro","text":"build key specifies actions take place automatically build project. first part default build key (project connected GitHub): specifies , project built, raw-data directory (.e. contents _raw_data) uploaded GitHub release whose name input. default, uploaded file called raw-data-v<project_version>.zip, <project_version> version project (e.g. 0.1.0). Furthermore, default takes place anything changes within raw-data, .e. file(s) added, removed changed. uploads designed highly flexible, can customised needs. Please see destination vignette details (evignette(\"destination\")). default, build key can also specify output docs folders uploaded GitHub releases, alternatively OSF local folder. addition, build key handles Git settings, whether Git commits automatically created build, whether pushed GitHub automatically. default, , means Git history updated build, changes pushed GitHub.","code":"build:   github:     input:       content: [raw-data]       description: \"Project inputs\""},{"path":"https://satvilab.github.io/projr/articles/intro.html","id":"use-projr_build_-functions-to-build-your-project","dir":"Articles","previous_headings":"Introduction","what":"Use projr_build_ functions to build your project","title":"intro","text":"projr provides two main functions help build project, projr_build_output() projr_build_dev(). nutshell, projr_build_dev() checking code write , projr_build_output() snapshotting sharing project. automatically detect type source documents (Rmd’s, Qmd’s, Quarto projects, bookdown projects) render accordingly.","code":""},{"path":"https://satvilab.github.io/projr/articles/intro.html","id":"projr_build_output-1","dir":"Articles","previous_headings":"Introduction > Use projr_build_ functions to build your project","what":"projr_build_output()","title":"intro","text":"projr_build_output() - projr_build_dev(), except output documents saved final destination (specified docs/output) outputs (GitHub/OSF) sent , desired). - set project GitHub, default raw-data, docs output folders uploaded GitHub GitHub releases.","code":""},{"path":"https://satvilab.github.io/projr/articles/intro.html","id":"projr_build_dev","dir":"Articles","previous_headings":"Introduction > Use projr_build_ functions to build your project","what":"projr_build_dev()","title":"intro","text":"projr_build_dev() renders literate programming documents document. results saved cache directory, <cache>/projr/v<project_version>/<directory_label>. example, suppose code Rmd file. using projr_build_dev, plot saved _tmp/projr/v<project_version>/output/figure/nobel_prize_winning_plot.png. instead saving _output/figure/nobel_prize_winning_plot.png, final destination. goes rendered documents (e.g. HTML files), saved _tmp/projr/v<project_version>/docs. addition, projr_build_dev allows render just chosen selection documents, e.g. projr_build_dev(\"analysis.Rmd\") render just analysis.Rmd document (can one).","code":"png(filename = projr_path_get(\"output\", \"figure\", \"nobel_prize_winning_plot.png\") # ... code to create the plot dev.off()"},{"path":"https://satvilab.github.io/projr/articles/intro.html","id":"create-a-github-account-and-save-github-credentials","dir":"Articles","previous_headings":"Introduction","what":"Create a GitHub account, and save GitHub credentials","title":"intro","text":"section really necessary introduct projr, Git GitHub useful code versioning sharing ’s worth mentioning .","code":""},{"path":"https://satvilab.github.io/projr/articles/intro.html","id":"do-i-need-git-and-github","dir":"Articles","previous_headings":"Introduction > Create a GitHub account, and save GitHub credentials","what":"Do I need Git and GitHub?","title":"intro","text":"Strictly speaking, need GitHub account. However, good idea one, great way collaborate share others. Don’t worry learning Git - projr can (default) handle . three steps setting Git GitHub: Create GitHub account. Generate GitHub personal authentication token (PAT). Save token computer. One need install Git, projr reverts gert R package Git installed.","code":""},{"path":"https://satvilab.github.io/projr/articles/intro.html","id":"the-steps","dir":"Articles","previous_headings":"Introduction > Create a GitHub account, and save GitHub credentials > Do I need Git and GitHub?","what":"The steps","title":"intro","text":"Create GitHub account don’t GitHub account, create one . can follow advice choosing user name. Generate GitHub PAT set GitHub credentials, following: Install usethis package: Use usethis set GitHub credentials: Run following R: browser open GitHub. bottom page, click Generate token. , copy token. Save GitHub PAT Use usethis save GitHub credentials: Run following R: Paste Git credentials prompted. now able download upload private repositories GitHub (.e. repositories accessible give access ). Note: instructions taken , provides slightly details.","code":"if (!requireNamespace(\"usethis\", quietly = TRUE)) {   install.packages(\"usethis\") } usethis::create_github_token() gitcreds::gitcreds_set()"},{"path":"https://satvilab.github.io/projr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Miguel Rodo. Author, maintainer.","code":""},{"path":"https://satvilab.github.io/projr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Rodo M (????). “projr: Facilitate reproducible archived projects.” https://satvilab.github.io/projr/.","code":"@Misc{rodo,   title = {projr: Facilitate reproducible and archived projects},   author = {Miguel Rodo},   url = {https://satvilab.github.io/projr/},   abstract = {Facilitate reproducible and archived projects.},   version = {0.0.9-10}, }"},{"path":"https://satvilab.github.io/projr/index.html","id":"projr","dir":"","previous_headings":"","what":"Facilitate reproducible and archived projects","title":"Facilitate reproducible and archived projects","text":"goal projr …","code":""},{"path":"https://satvilab.github.io/projr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Facilitate reproducible and archived projects","text":"can install development version projr GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"SATVILab/projr\")"},{"path":"https://satvilab.github.io/projr/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Facilitate reproducible and archived projects","text":"basic example shows solve common problem:","code":"library(projr) ## basic example code"},{"path":"https://satvilab.github.io/projr/reference/cat.html","id":null,"dir":"Reference","previous_headings":"","what":"Cat useful information — projr_cat_changelog","title":"Cat useful information — projr_cat_changelog","text":"Cat useful information. projr_cat_changelog:","code":""},{"path":"https://satvilab.github.io/projr/reference/cat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cat useful information — projr_cat_changelog","text":"","code":"projr_cat_changelog(n_row = 10)"},{"path":"https://satvilab.github.io/projr/reference/cat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cat useful information — projr_cat_changelog","text":"n_row integer. Number rows cat.","code":""},{"path":"https://satvilab.github.io/projr/reference/dot-projr_yml_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Get active projr settings and do no check — .projr_yml_get","title":"Get active projr settings and do no check — .projr_yml_get","text":"list active projr settings, without error checking. Gets active projr settings, merges settings resolves conflicts local (_projr-local.yml), profile (_projr-<projr>.yml - keys _projr.yml) default (_projr.yml) settings. conflicts, local settings highest precedence (.e. always preferred) default settings lowest precedence (.e. never preferred).","code":""},{"path":"https://satvilab.github.io/projr/reference/dot-projr_yml_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get active projr settings and do no check — .projr_yml_get","text":"","code":".projr_yml_get(profile)"},{"path":"https://satvilab.github.io/projr/reference/dot-projr_yml_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get active projr settings and do no check — .projr_yml_get","text":"profile character. supplied, specific profile file read . \"default\" loads _projr.yml, another value loads _projr-<profile>.yml. NULL, active profile used. supplied, treated NULL.","code":""},{"path":"https://satvilab.github.io/projr/reference/dot-projr_yml_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get active projr settings and do no check — .projr_yml_get","text":"named list.","code":""},{"path":[]},{"path":"https://satvilab.github.io/projr/reference/instr_auth.html","id":null,"dir":"Reference","previous_headings":"","what":"Two-minutes or less authorisation instructions — projr_instr_auth_github","title":"Two-minutes or less authorisation instructions — projr_instr_auth_github","text":"projr_instr_auth_github projr_instr_auth_osf print easy--follow, step--step instructions authorisation GitHub OSF.","code":""},{"path":"https://satvilab.github.io/projr/reference/instr_auth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Two-minutes or less authorisation instructions — projr_instr_auth_github","text":"","code":"projr_instr_auth_github()  projr_instr_auth_osf()"},{"path":"https://satvilab.github.io/projr/reference/projr_build_dev.html","id":null,"dir":"Reference","previous_headings":"","what":"Build dev project — projr_build_dev","title":"Build dev project — projr_build_dev","text":"Builds project output, means recording input output data hashes, building actual bookdown document saving archiving selected output.","code":""},{"path":"https://satvilab.github.io/projr/reference/projr_build_dev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build dev project — projr_build_dev","text":"","code":"projr_build_dev(   file = NULL,   bump = FALSE,   old_dev_remove = TRUE,   args_engine = list(),   profile = NULL )"},{"path":"https://satvilab.github.io/projr/reference/projr_build_dev.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build dev project — projr_build_dev","text":"file character vector. Paths files build. Paths may relative project root, absolute. Default NULL, case files built. bump logical. Whether increment dev version build. Default FALSE. old_dev_remove logical. TRUE, previous development builds deleted successful run. args_engine list. Arguments passed rendering engine (rmarkdown::render, quarto::render bookdown::render_book). profile character. projr profile use. set environment variable PROJR_PROFILE value start build,","code":""},{"path":"https://satvilab.github.io/projr/reference/projr_build_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Build project to output — projr_build_output","title":"Build project to output — projr_build_output","text":"projr_build_output Builds project output, means recording input output data hashes, building actual bookdown document saving archiving selected output. projr_build_major, projr_build_minor projr_build_patch wrappers around projr_build_output version component bumped set automatically, e.g. projr_build_major() equivalent projr_build_output(bump_component = \"major\").","code":""},{"path":"https://satvilab.github.io/projr/reference/projr_build_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build project to output — projr_build_output","text":"","code":"projr_build_output(   bump_component,   msg = NULL,   args_engine = list(),   profile = NULL )  projr_build_major(msg = NULL, args_engine = list(), profile = NULL)  projr_build_minor(msg = NULL, args_engine = list(), profile = NULL)  projr_build_patch(msg = NULL, args_engine = list(), profile = NULL)"},{"path":"https://satvilab.github.io/projr/reference/projr_build_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build project to output — projr_build_output","text":"bump_component \"major\", \"minor\", \"patch\" missing. Specifies version component increment. missing, set equal lowest version component used version format. default (.e. missing default). msg character. Message append Git commit messages. Default NULL, case user prompted message , session interactive, left empty. Default NULL. Note Git messages case blank - simply consist details version bumped stage build process commit made. args_engine list. Arguments passed rendering engine (rmarkdown::render, quarto::render bookdown::render_book). profile character. projr profile use. set environment variable PROJR_PROFILE value start build,","code":""},{"path":"https://satvilab.github.io/projr/reference/projr_env_file_activate.html","id":null,"dir":"Reference","previous_headings":"","what":"Activate environment variables in files — projr_env_file_activate","title":"Activate environment variables in files — projr_env_file_activate","text":"file(s) used supply default values unspecified environment variables.","code":""},{"path":"https://satvilab.github.io/projr/reference/projr_env_file_activate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Activate environment variables in files — projr_env_file_activate","text":"","code":"projr_env_file_activate(file = NULL)"},{"path":"https://satvilab.github.io/projr/reference/projr_env_file_activate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Activate environment variables in files — projr_env_file_activate","text":"file character vector. Paths files activate. Default NULL, case relevant files exist used (environment.local, _environment-<profile> _environment, order decreasing priority <profile> activated Quarto profile)","code":""},{"path":"https://satvilab.github.io/projr/reference/projr_ignore_auto.html","id":null,"dir":"Reference","previous_headings":"","what":"Update .gitignore and .Rbuildignore with projr-managed ignores — projr_ignore_auto","title":"Update .gitignore and .Rbuildignore with projr-managed ignores — projr_ignore_auto","text":"projr_ignore_auto() function updates project’s .gitignore .Rbuildignore files reflect directories files managed projr, well directories files clearly ignored. kept --date project's configuration, written within demarcated section file.","code":""},{"path":"https://satvilab.github.io/projr/reference/projr_ignore_auto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update .gitignore and .Rbuildignore with projr-managed ignores — projr_ignore_auto","text":"","code":"projr_ignore_auto()"},{"path":"https://satvilab.github.io/projr/reference/projr_ignore_auto.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update .gitignore and .Rbuildignore with projr-managed ignores — projr_ignore_auto","text":"Called primarily side effects (modifying .gitignore /.Rbuildignore). Returns TRUE invisibly.","code":""},{"path":[]},{"path":"https://satvilab.github.io/projr/reference/projr_ignore_auto.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update .gitignore and .Rbuildignore with projr-managed ignores — projr_ignore_auto","text":"","code":"if (FALSE) { # \\dontrun{   projr_ignore_auto() } # }"},{"path":"https://satvilab.github.io/projr/reference/projr_ignore_manual.html","id":null,"dir":"Reference","previous_headings":"","what":"Manually Ignore Files or Directories in .gitignore and .Rbuildignore — projr_ignore_manual","title":"Manually Ignore Files or Directories in .gitignore and .Rbuildignore — projr_ignore_manual","text":"functions allow manual addition files directories .gitignore .Rbuildignore files, outside automatic management provided projr package. projr_ignore_manual: General function add files directories .gitignore .Rbuildignore. path exist, treated file. projr_ignore_manual_dir: Specifically adds directories .gitignore .Rbuildignore. projr_ignore_manual_file: Specifically adds files .gitignore .Rbuildignore. projr_ignore_manual_dir_git projr_ignore_manual_file_git: Add directories files explicitly .gitignore. projr_ignore_manual_dir_rbuild projr_ignore_manual_file_rbuild: Add directories files explicitly .Rbuildignore.","code":""},{"path":"https://satvilab.github.io/projr/reference/projr_ignore_manual.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manually Ignore Files or Directories in .gitignore and .Rbuildignore — projr_ignore_manual","text":"","code":"projr_ignore_manual(ignore)  projr_ignore_manual_dir(ignore)  projr_ignore_manual_file(ignore)  projr_ignore_manual_file_git(ignore)  projr_ignore_manual_dir_git(ignore)  projr_ignore_manual_file_rbuild(ignore)  projr_ignore_manual_dir_rbuild(ignore)"},{"path":"https://satvilab.github.io/projr/reference/projr_ignore_manual.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manually Ignore Files or Directories in .gitignore and .Rbuildignore — projr_ignore_manual","text":"ignore character vector file directory paths ignored. Paths must valid non-empty strings.","code":""},{"path":"https://satvilab.github.io/projr/reference/projr_ignore_manual.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Manually Ignore Files or Directories in .gitignore and .Rbuildignore — projr_ignore_manual","text":"Invisibly returns TRUE operation succeeds, FALSE input contains invalid (empty) paths.","code":""},{"path":"https://satvilab.github.io/projr/reference/projr_ignore_manual.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Manually Ignore Files or Directories in .gitignore and .Rbuildignore — projr_ignore_manual","text":"functions provide fine-grained control cases users want manually ignore specific paths permanently. interact automated ignore management system projr. Non-existent paths provided projr_ignore_manual assumed files. .gitignore, directories automatically appended /** missing, ensuring proper Git ignore syntax. .Rbuildignore, paths converted regular expressions using glob2rx compatibility R's build tools.","code":""},{"path":[]},{"path":"https://satvilab.github.io/projr/reference/projr_ignore_manual.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Manually Ignore Files or Directories in .gitignore and .Rbuildignore — projr_ignore_manual","text":"","code":"# Manually ignore files and directories projr_ignore_manual(c(\"output\", \"tempfile.log\")) #> Error in ind_vec[[\"top\"]]: subscript out of bounds  # Specifically ignore directories projr_ignore_manual_dir(\"data\") #> Error in ind_vec[[\"top\"]]: subscript out of bounds  # Specifically ignore files projr_ignore_manual_file(\"README.md\") #> Error in ind_vec[[\"top\"]]: subscript out of bounds"},{"path":"https://satvilab.github.io/projr/reference/projr_init.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialise project — projr_init","title":"Initialise project — projr_init","text":"Initialise project","code":""},{"path":"https://satvilab.github.io/projr/reference/projr_init.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialise project — projr_init","text":"","code":"projr_init(   yml_path_from = NULL,   renv_force = FALSE,   renv_bioconductor = TRUE,   public = FALSE )"},{"path":"https://satvilab.github.io/projr/reference/projr_init.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialise project — projr_init","text":"yml_path_from character. Path YAML file use _projr.yml. supplied, default _projr.yml file used. renv_force Logical. Passed renv::init(). FALSE, renv::init() run detects working directory already registered renv. Default FALSE. renv_bioconductor Logical. Whether renv look packages Bioconductor. Default TRUE. public logical. Whether GitHub repo created () public . Default FALSE.","code":""},{"path":[]},{"path":"https://satvilab.github.io/projr/reference/projr_init_renviron.html","id":null,"dir":"Reference","previous_headings":"","what":"Set environment variables for projr_init — projr_init_renviron","title":"Set environment variables for projr_init — projr_init_renviron","text":"Set environment variables projr_init. set, projr_init use variables provide options populate metadata. function creates .Renviron file user exist. adds variables .Renviron file without values set.","code":""},{"path":"https://satvilab.github.io/projr/reference/projr_init_renviron.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set environment variables for projr_init — projr_init_renviron","text":"","code":"projr_init_renviron()"},{"path":"https://satvilab.github.io/projr/reference/projr_osf_create_project.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new project on OSF — projr_osf_create_project","title":"Create a new project on OSF — projr_osf_create_project","text":"function creates new project Open Science Framework (OSF) specified title, description, visibility settings.","code":""},{"path":"https://satvilab.github.io/projr/reference/projr_osf_create_project.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new project on OSF — projr_osf_create_project","text":"","code":"projr_osf_create_project(title, description, public)"},{"path":"https://satvilab.github.io/projr/reference/projr_osf_create_project.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new project on OSF — projr_osf_create_project","text":"title character. Title project. description character. Description project. public logical. Whether project public (TRUE) private (FALSE).","code":""},{"path":"https://satvilab.github.io/projr/reference/projr_osf_create_project.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new project on OSF — projr_osf_create_project","text":"character string containing ID newly created project.","code":""},{"path":[]},{"path":"https://satvilab.github.io/projr/reference/projr_osf_create_project.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a new project on OSF — projr_osf_create_project","text":"","code":"if (FALSE) { # \\dontrun{ projr_osf_create_project(   title = \"My New Project\",   description = \"This is a description of my new project.\",   public = TRUE # because open science ) } # }"},{"path":"https://satvilab.github.io/projr/reference/projr_par_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Get project parameters — projr_par_get","title":"Get project parameters — projr_par_get","text":"Get project parameters param key projr configuration.","code":""},{"path":"https://satvilab.github.io/projr/reference/projr_par_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get project parameters — projr_par_get","text":"","code":"projr_par_get(..., profile = NULL)  projr_param_get(..., profile = NULL)"},{"path":"https://satvilab.github.io/projr/reference/projr_par_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get project parameters — projr_par_get","text":"... character. Sequential names specify path list. example, projr_param_get(\"\", \"b\") returns value projr$param$$b. profile character. NULL, active profile used. Default NULL.","code":""},{"path":"https://satvilab.github.io/projr/reference/projr_path_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Return path — projr_path_get","title":"Return path — projr_path_get","text":"Returns path projr profile-specific directory. Differs projr_dir_get assume path directory. create parent directory specified path exist, ignore requested _projr.yml.","code":""},{"path":"https://satvilab.github.io/projr/reference/projr_path_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return path — projr_path_get","text":"","code":"projr_path_get(   label,   ...,   create = TRUE,   relative = FALSE,   absolute = FALSE,   safe = TRUE )"},{"path":"https://satvilab.github.io/projr/reference/projr_path_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return path — projr_path_get","text":"label character. One \"raw_data\", \"cache\",\"output\", \"archive\" \"docs\". Class directory return. \"docs\" option returns path output directory bookdown::render_book (specified \"_bookdown.yml\"), whereas others returns paths specified \"_projr.yml\". ... Specifies sub-path directory returned. create logical. TRUE, parent directory created exist ignored () .gitignore .Rbuildignore specified _projr.yml. Default TRUE. relative logical. TRUE, forces returned path relative project root. Default FALSE. absolute logical. TRUE, forces returned path absolute. Default FALSE. safe logical. TRUE, output directory set \"<path_to_cache>/projr_output\" instead <path_to_output> (specified _projr.yml). time set TRUE projr_build_output run, otherwise \"development\" test runs add , delete overwrite fabciles previous run projr_build_output. Default TRUE. change unless know .","code":""},{"path":"https://satvilab.github.io/projr/reference/projr_path_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return path — projr_path_get","text":"Character. Path directory requested.","code":""},{"path":"https://satvilab.github.io/projr/reference/projr_path_get.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Return path — projr_path_get","text":"DETAILS","code":""},{"path":"https://satvilab.github.io/projr/reference/projr_path_get.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return path — projr_path_get","text":"","code":"if (FALSE) { # \\dontrun{ if (interactive()) {   # EXAMPLE1 } } # }"},{"path":"https://satvilab.github.io/projr/reference/projr_path_get_cache_build.html","id":null,"dir":"Reference","previous_headings":"","what":"Get projr build cache directory — projr_path_get_cache_build_dir","title":"Get projr build cache directory — projr_path_get_cache_build_dir","text":"Get cache directory projr builds. sub-directory cache directory. development builds (projr_build_dev), final directory output docs items. output builds (projr_build_output), staging directory. documents rendered, copied final directories. projr_path_get_cache_build assumes path file, whereas projr_path_get_cache_build_dir assumes path directory. distinctiion relevant create = TRUE, determines directory attempted created.","code":""},{"path":"https://satvilab.github.io/projr/reference/projr_path_get_cache_build.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get projr build cache directory — projr_path_get_cache_build_dir","text":"","code":"projr_path_get_cache_build_dir(..., create = FALSE, profile)  projr_path_get_cache_build(..., create = FALSE, profile)"},{"path":"https://satvilab.github.io/projr/reference/projr_path_get_cache_build.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get projr build cache directory — projr_path_get_cache_build_dir","text":"... comma-separated strings specified initially label (e.g. \"docs\" \"output\") well , optionally, sub-directories (e.g. \"img\", \"). example, projr_path_get_cache_build(\"docs\", \"img\") returns path img directory docs sub-directory build cache directory. create logical. TRUE, directory created exist. profile character. name projr profile use. Default NULL, uses current projr profile.","code":""},{"path":"https://satvilab.github.io/projr/reference/projr_path_get_cache_build.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get projr build cache directory — projr_path_get_cache_build_dir","text":"character. Path cache (sub-)directory projr builds.","code":""},{"path":[]},{"path":"https://satvilab.github.io/projr/reference/projr_path_get_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Return path to profile-specific directory — projr_path_get_dir","title":"Return path to profile-specific directory — projr_path_get_dir","text":"Returns path projr profile-specific directory. Also creates directory exist, ignores requested _projr.yml.","code":""},{"path":"https://satvilab.github.io/projr/reference/projr_path_get_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return path to profile-specific directory — projr_path_get_dir","text":"","code":"projr_path_get_dir(   label,   ...,   create = TRUE,   relative = FALSE,   absolute = FALSE,   safe = TRUE )"},{"path":"https://satvilab.github.io/projr/reference/projr_path_get_dir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return path to profile-specific directory — projr_path_get_dir","text":"label character. One \"raw\", \"cache\",\"output\", \"archive\" \"docs\". Class directory return. \"docs\" option returns path output directory bookdown::render_book (specified \"_bookdown.yml\"), whereas others returns paths specified \"_projr.yml\". ... Specifies sub-directory directory returned. Passed file.path. create logical. TRUE, directory created exist ignored () .gitignore .Rbuildignore specified _projr.yml. Default TRUE. relative logical. TRUE, forces returned path relative project root. Default FALSE. absolute logical. TRUE, forces returned path absolute. Default FALSE. safe logical. TRUE, output directory set \"<path_to_cache>/projr_output\" instead <path_to_output> (specified _projr.yml). time set TRUE projr_build_output run, otherwise \"development\" test runs add , delete overwrite fabciles previous run projr_build_output. Default TRUE. change unless know .","code":""},{"path":"https://satvilab.github.io/projr/reference/projr_path_get_dir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return path to profile-specific directory — projr_path_get_dir","text":"Character. Path directory requested.","code":""},{"path":"https://satvilab.github.io/projr/reference/projr_profile_create.html","id":null,"dir":"Reference","previous_headings":"","what":"Add projr profile file — projr_profile_create","title":"Add projr profile file — projr_profile_create","text":"Creates new projr profile can override settings _projr.yml. associated file exists, creates blank file. file ignored R build process , local profile, Git well.","code":""},{"path":"https://satvilab.github.io/projr/reference/projr_profile_create.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add projr profile file — projr_profile_create","text":"","code":"projr_profile_create(profile)"},{"path":"https://satvilab.github.io/projr/reference/projr_profile_create.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add projr profile file — projr_profile_create","text":"profile character. Name profile. supplied, profile named default (file _projr.yml created).","code":""},{"path":"https://satvilab.github.io/projr/reference/projr_profile_create.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add projr profile file — projr_profile_create","text":"Invisibly returns TRUE file created, FALSE file already exists.","code":""},{"path":[]},{"path":"https://satvilab.github.io/projr/reference/projr_profile_create_local.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a local projr profile — projr_profile_create_local","title":"Create a local projr profile — projr_profile_create_local","text":"Create projr profile highest precedence (.e. settings overwrite others) ignored Git.","code":""},{"path":"https://satvilab.github.io/projr/reference/projr_profile_create_local.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a local projr profile — projr_profile_create_local","text":"","code":"projr_profile_create_local()"},{"path":"https://satvilab.github.io/projr/reference/projr_profile_create_local.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a local projr profile — projr_profile_create_local","text":"Note setting _projr-local.yml empty, lower-precendence file's setting (.e. _projr-<profile>.yml _projr.yml) used. Empty settings default indicated ~.","code":""},{"path":[]},{"path":"https://satvilab.github.io/projr/reference/projr_profile_delete.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete a projr profile from _projr.yml — projr_profile_delete","title":"Delete a projr profile from _projr.yml — projr_profile_delete","text":"Deletes projr profile _projr.yml /corresponding _projr-<profile>.yml file.","code":""},{"path":"https://satvilab.github.io/projr/reference/projr_profile_delete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete a projr profile from _projr.yml — projr_profile_delete","text":"","code":"projr_profile_delete(profile)"},{"path":"https://satvilab.github.io/projr/reference/projr_profile_delete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete a projr profile from _projr.yml — projr_profile_delete","text":"profile character. projr profile delete.","code":""},{"path":"https://satvilab.github.io/projr/reference/projr_profile_delete.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete a projr profile from _projr.yml — projr_profile_delete","text":"invisible(TRUE).","code":""},{"path":"https://satvilab.github.io/projr/reference/projr_profile_delete_local.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete local projr settings file. — projr_profile_delete_local","title":"Delete local projr settings file. — projr_profile_delete_local","text":"Deletes _projr-local.yml file.","code":""},{"path":"https://satvilab.github.io/projr/reference/projr_profile_delete_local.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete local projr settings file. — projr_profile_delete_local","text":"","code":"projr_profile_delete_local()"},{"path":"https://satvilab.github.io/projr/reference/projr_profile_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Get active projr profile — projr_profile_get","title":"Get active projr profile — projr_profile_get","text":"Get active projr profile(s).","code":""},{"path":"https://satvilab.github.io/projr/reference/projr_profile_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get active projr profile — projr_profile_get","text":"","code":"projr_profile_get()"},{"path":"https://satvilab.github.io/projr/reference/projr_profile_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get active projr profile — projr_profile_get","text":"Character vector length equal number active profiles.","code":""},{"path":"https://satvilab.github.io/projr/reference/projr_profile_get.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get active projr profile — projr_profile_get","text":"Note local default returned, always active (exist). local corresponds _projr-local.yml default _projr.yml.","code":""},{"path":"https://satvilab.github.io/projr/reference/projr_renv_restore.html","id":null,"dir":"Reference","previous_headings":"","what":"Restore or Update renv Lockfile Packages — projr_renv_restore","title":"Restore or Update renv Lockfile Packages — projr_renv_restore","text":"Functions manage restoration updating packages specified renv lockfile. projr_renv_restore(): Restores packages lockfile, attempting install lockfile versions. projr_renv_update(): Updates packages latest available versions, ignoring lockfile versions. projr_renv_restore_and_update(): First restores packages lockfile, updates latest versions.","code":""},{"path":"https://satvilab.github.io/projr/reference/projr_renv_restore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Restore or Update renv Lockfile Packages — projr_renv_restore","text":"","code":"projr_renv_restore(   github = TRUE,   non_github = TRUE,   biocmanager_install = FALSE )  projr_renv_update(   github = TRUE,   non_github = TRUE,   biocmanager_install = FALSE )  projr_renv_restore_and_update(   github = TRUE,   non_github = TRUE,   biocmanager_install = FALSE )"},{"path":"https://satvilab.github.io/projr/reference/projr_renv_restore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Restore or Update renv Lockfile Packages — projr_renv_restore","text":"github Logical. Whether process GitHub packages. Default TRUE. non_github Logical. Whether process non-GitHub packages (CRAN Bioconductor). Default TRUE. biocmanager_install Logical. TRUE, Bioconductor packages installed using BiocManager::install; otherwise, renv::install(\"bioc::<package_name>\") used. Default FALSE.","code":""},{"path":"https://satvilab.github.io/projr/reference/projr_renv_restore.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Restore or Update renv Lockfile Packages — projr_renv_restore","text":"Invisibly returns TRUE upon successful completion.","code":""},{"path":"https://satvilab.github.io/projr/reference/projr_renv_restore.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Restore or Update renv Lockfile Packages — projr_renv_restore","text":"Control whether process GitHub packages, non-GitHub packages (CRAN Bioconductor), using github non_github arguments.","code":""},{"path":"https://satvilab.github.io/projr/reference/projr_renv_restore.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Restore or Update renv Lockfile Packages — projr_renv_restore","text":"","code":"if (FALSE) { # \\dontrun{ # Restore all packages projr_renv_restore()  # Update all packages projr_renv_update()  # Restore and then update all packages projr_renv_restore_and_update()  # Only restore non-GitHub packages projr_renv_restore(github = FALSE)  # Only update GitHub packages projr_renv_update(non_github = FALSE) } # }"},{"path":"https://satvilab.github.io/projr/reference/projr_renv_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Test renv restore — projr_renv_test","title":"Test renv restore — projr_renv_test","text":"Tests renv::restore() without using cache clean, temporary environment. Automatically creates temporary project directory, initializes renv, copies required files, disables cache via .Rprofile, performs renv::restore(). Afterwards, deletes first library path renv restored packages. Note: ensure isolation, test runs directory completely separate parent project executes Rscript --vanilla option. --vanilla flag seems essential prevent project renv settings affected testing.","code":""},{"path":"https://satvilab.github.io/projr/reference/projr_renv_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test renv restore — projr_renv_test","text":"","code":"projr_renv_test(files_to_copy = NULL, delete_lib = TRUE)"},{"path":"https://satvilab.github.io/projr/reference/projr_renv_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test renv restore — projr_renv_test","text":"files_to_copy character vector. Paths files copy temporary directory restoring. Note renv.lock always copied. delete_lib Logical. TRUE, restored library path deleted test. Default TRUE.","code":""},{"path":"https://satvilab.github.io/projr/reference/projr_renv_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test renv restore — projr_renv_test","text":"TRUE renv::restore() succeeds, FALSE otherwise.","code":""},{"path":"https://satvilab.github.io/projr/reference/projr_unignore_manual.html","id":null,"dir":"Reference","previous_headings":"","what":"Manually Unignore Files or Directories in .gitignore and .Rbuildignore — projr_unignore_manual","title":"Manually Unignore Files or Directories in .gitignore and .Rbuildignore — projr_unignore_manual","text":"functions allow manual addition files directories .gitignore .Rbuildignore files projr-managed block, thereby forcing ignored. projr_unignore_manual: General function unignore files directories .gitignore .Rbuildignore. path exist, treated file. projr_unignore_manual_dir: Specifically unignores directories .gitignore .Rbuildignore. projr_unignore_manual_file: Specifically unignores files .gitignore .Rbuildignore. projr_unignore_manual_dir_git projr_unignore_manual_file_git: Add directories files explicitly (! prefix) .gitignore. projr_unignore_manual_dir_rbuild projr_unignore_manual_file_rbuild: Add directories files explicitly (! prefix) .Rbuildignore.","code":""},{"path":"https://satvilab.github.io/projr/reference/projr_unignore_manual.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manually Unignore Files or Directories in .gitignore and .Rbuildignore — projr_unignore_manual","text":"","code":"projr_unignore_manual(unignore)  projr_unignore_manual_dir(unignore)  projr_unignore_manual_file(unignore)  projr_unignore_manual_file_git(unignore)  projr_unignore_manual_dir_git(unignore)  projr_unignore_manual_file_rbuild(unignore)  projr_unignore_manual_dir_rbuild(unignore)"},{"path":"https://satvilab.github.io/projr/reference/projr_unignore_manual.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manually Unignore Files or Directories in .gitignore and .Rbuildignore — projr_unignore_manual","text":"unignore character vector file directory paths unignored. Paths must valid non-empty strings.","code":""},{"path":"https://satvilab.github.io/projr/reference/projr_unignore_manual.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Manually Unignore Files or Directories in .gitignore and .Rbuildignore — projr_unignore_manual","text":"Invisibly returns TRUE operation succeeds, FALSE input contains invalid (empty) paths.","code":""},{"path":"https://satvilab.github.io/projr/reference/projr_unignore_manual.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Manually Unignore Files or Directories in .gitignore and .Rbuildignore — projr_unignore_manual","text":"functions provide fine-grained control cases users want undo ignoring behavior specific paths permanently. interact automated ignore management system projr. Non-existent paths provided projr_unignore_manual assumed files. .gitignore, unignored directories automatically appended /** missing, prepended !, ensuring proper Git unignore syntax. .Rbuildignore, paths converted regular expressions using glob2rx(), prepended ! compatibility R's build tools.","code":""},{"path":[]},{"path":"https://satvilab.github.io/projr/reference/projr_unignore_manual.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Manually Unignore Files or Directories in .gitignore and .Rbuildignore — projr_unignore_manual","text":"","code":"# Manually unignore files and directories projr_unignore_manual(c(\"output\", \"tempfile.log\")) #> Error in ind_vec[[\"top\"]]: subscript out of bounds  # Specifically unignore directories projr_unignore_manual_dir(\"data\") #> Error in ind_vec[[\"top\"]]: subscript out of bounds  # Specifically unignore files projr_unignore_manual_file(\"README.md\") #> Error in ind_vec[[\"top\"]]: subscript out of bounds"},{"path":"https://satvilab.github.io/projr/reference/projr_use_data.html","id":null,"dir":"Reference","previous_headings":"","what":"projr drop-in replacement for usethis::use_data — projr_use_data","title":"projr drop-in replacement for usethis::use_data — projr_use_data","text":"usethis::use_data always saves data data/, conflicts temporary directories used projr_build_dev makes difficult restore failed output builds. projr_use_data drop-replacement usethis::use_data, saves data temporary directory safe = TRUE. makes easier restore project failed output build. difference projr_use_data invisibly returns path saved data file, whereas usethis::use_data returns TRUE.","code":""},{"path":"https://satvilab.github.io/projr/reference/projr_use_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"projr drop-in replacement for usethis::use_data — projr_use_data","text":"","code":"projr_use_data(   ...,   internal = FALSE,   overwrite = FALSE,   compress = \"bzip2\",   version = 2,   ascii = FALSE,   safe = TRUE )"},{"path":"https://satvilab.github.io/projr/reference/projr_use_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"projr drop-in replacement for usethis::use_data — projr_use_data","text":"... Unquoted names existing objects save. internal FALSE, saves object .rda file data/ directory. data files bypass usual export mechanism available whenever package loaded (via data() LazyData true). TRUE, stores objects single R/sysdata.rda file. Objects file follow usual export rules. Note means exported using common exportPattern() rule exports objects except start .. overwrite default, projr_use_data() overwrite existing files. really want , set TRUE. compress Choose type compression used save(). one \"gzip\", \"bzip2\", \"xz\". version serialization format version use. default, 2, default format R 1.4.0 3.5.3. Version 3 became default R 3.6.0 can read R versions 3.5.0 higher. ascii TRUE, ASCII representation data     written.  default value ascii FALSE     leads binary file written.  NA     version >= 2, different ASCII representation used     writes double/complex numbers binary fractions. safe logical. Whether save data temporary directory (<cache>/\"projr\"/v<version>/data/) \"data/\". Default temporary directory (TRUE).","code":""},{"path":"https://satvilab.github.io/projr/reference/projr_use_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"projr drop-in replacement for usethis::use_data — projr_use_data","text":"Taken directly documentation original usethis function, adjusted slightly.","code":""},{"path":[]},{"path":"https://satvilab.github.io/projr/reference/projr_use_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"projr drop-in replacement for usethis::use_data — projr_use_data","text":"","code":"if (FALSE) { # \\dontrun{ x <- 1:10 y <- 1:100  projr_use_data(x, y) # For external use projr_use_data(x, y, internal = TRUE) # For internal use } # }"},{"path":"https://satvilab.github.io/projr/reference/projr_version_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns project version — projr_version_get","title":"Returns project version — projr_version_get","text":"Returns project version","code":""},{"path":"https://satvilab.github.io/projr/reference/projr_version_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns project version — projr_version_get","text":"","code":"projr_version_get()"},{"path":"https://satvilab.github.io/projr/reference/projr_version_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns project version — projr_version_get","text":"Character.","code":""},{"path":"https://satvilab.github.io/projr/reference/projr_version_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Project Version — projr_version_set","title":"Set Project Version — projr_version_set","text":"Sets project version manually DESCRIPTION file optionally VERSION file. useful cases need increment version manually, example, collaborator pushed changes want manually set version merging.","code":""},{"path":"https://satvilab.github.io/projr/reference/projr_version_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Project Version — projr_version_set","text":"","code":"projr_version_set(version, only_if_exists = TRUE)"},{"path":"https://satvilab.github.io/projr/reference/projr_version_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Project Version — projr_version_set","text":"version character string specifying version set. may include development component (e.g., \"1.2.3-dev\") just stable version (e.g., \"1.2.3\"). only_if_exists logical flag indicating whether update VERSION file already exists (TRUE) create exist (FALSE). Defaults TRUE.","code":""},{"path":"https://satvilab.github.io/projr/reference/projr_version_set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Project Version — projr_version_set","text":"Invisibly returns TRUE successful.","code":""},{"path":"https://satvilab.github.io/projr/reference/projr_yml_check.html","id":null,"dir":"Reference","previous_headings":"","what":"Check active projr settings. — projr_yml_check","title":"Check active projr settings. — projr_yml_check","text":"Checks correctness active projr settings.","code":""},{"path":"https://satvilab.github.io/projr/reference/projr_yml_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check active projr settings. — projr_yml_check","text":"","code":"projr_yml_check(profile = NULL)"},{"path":"https://satvilab.github.io/projr/reference/projr_yml_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check active projr settings. — projr_yml_check","text":"profile character(). Profile whose file needs checked. supplied, merged profile used. Default NULL.","code":""},{"path":"https://satvilab.github.io/projr/reference/projr_yml_check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check active projr settings. — projr_yml_check","text":"Returns TRUE checks pass. Otherwise throws error.","code":""},{"path":"https://satvilab.github.io/projr/reference/projr_yml_dest_add.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a local directory as a destination — projr_yml_dest_add_local","title":"Add a local directory as a destination — projr_yml_dest_add_local","text":"Add local directory destination _projr.yml file.","code":""},{"path":"https://satvilab.github.io/projr/reference/projr_yml_dest_add.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a local directory as a destination — projr_yml_dest_add_local","text":"","code":"projr_yml_dest_add_local(   title,   content,   path,   structure = NULL,   path_append_label = NULL,   overwrite = TRUE,   send_cue = NULL,   send_sync_approach = NULL,   send_version_source = NULL,   send_conflict = NULL,   profile = \"default\" )"},{"path":"https://satvilab.github.io/projr/reference/projr_yml_dest_add.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a local directory as a destination — projr_yml_dest_add_local","text":"title character. name directory. effect besides helping structure _projr.yml. supplied, made equal content. content character vector. Labels directories include upload. Options labels directories active projr configuration, well \"docs\", \"data\" \"code\". \"docs\" means directory documents rendered , \"data\" means files \"data\" directory, \"code\" means files tracked Git repository. path character. Path directory. relative path given, taken relative project home directory. Must supplied. structure \"latest\" \"version\". Structure remote. \"latest\", path simply contains latest versions contents. \"version\", path contain directory version. supplied, version. path_append_label logical. Whether append label path. TRUE, label appended path. FALSE, path path label. set, treated TRUE. overwrite logical. Whether rewrite existing entry title specified projr configuration file. Default TRUE. send_cue TRUE/FALSE, one \"build\", \"dev\", \"patch\", \"minor\" \"major\". Minimum component bumped project build initiate upload. TRUE, set \"patch\". FALSE, never uploaded. \"build\", uploaded every build, including dev builds, dev \"build\" equivalent. send_sync_approach \"upload-\", \"upload-missing\", \"sync-using-deletiong\" \"sync-using-version\". synchronise remote. upload-, files uploaded. upload-missing, missing files uploaded. sync-using-deletion, files remote deleted uploading local files. sync-using-version, files changed added locally uploaded remote, files removed locally removed remote. set, \"sync-using-version\" used. send_version_source \"manifest\" \"file\". sync-using-version synchronisation approach, whether use recorded versions objects determine changed  (\"manifest\"), download everything remote, version compare local folder (\"file\"). set, \"manifest\" used. send_conflict \"overwrite\", \"error\" \"skip\". file uploaded remote already remote. Default \"overwrite\". profile character. Profile write settings . \"default\", written _projr.yml, otherwise written _projr-<profile>.yml. default \"default\".","code":""},{"path":"https://satvilab.github.io/projr/reference/projr_yml_dest_add_github.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a GitHub release as a destination — projr_yml_dest_add_github","title":"Add a GitHub release as a destination — projr_yml_dest_add_github","text":"Add GitHub release destination _projr.yml file.","code":""},{"path":"https://satvilab.github.io/projr/reference/projr_yml_dest_add_github.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a GitHub release as a destination — projr_yml_dest_add_github","text":"","code":"projr_yml_dest_add_github(   title,   content,   structure = NULL,   overwrite = TRUE,   send_cue = NULL,   send_sync_approach = NULL,   send_version_source = NULL,   send_conflict = NULL,   profile = \"default\" )"},{"path":"https://satvilab.github.io/projr/reference/projr_yml_dest_add_github.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a GitHub release as a destination — projr_yml_dest_add_github","text":"title character. Title GitHub release. Can use title @version, case release entitled version project time. supplied, automatically generated content. content character vector. Labels directories include upload. Options labels directories active projr configuration, well \"docs\", \"data\" \"code\". \"docs\" means directory documents rendered , \"data\" means files \"data\" directory, \"code\" means files tracked Git repository. structure \"latest\" \"version\". Structure remote. \"latest\", path simply contains latest versions contents. \"version\", path contain directory version. supplied, version. overwrite logical. Whether rewrite existing entry title specified projr configuration file. Default TRUE. send_cue TRUE/FALSE, one \"build\", \"dev\", \"patch\", \"minor\" \"major\". Minimum component bumped project build initiate upload. TRUE, set \"patch\". FALSE, never uploaded. \"build\", uploaded every build, including dev builds, dev \"build\" equivalent. send_sync_approach \"upload-\", \"upload-missing\", \"sync-using-deletiong\" \"sync-using-version\". synchronise remote. upload-, files uploaded. upload-missing, missing files uploaded. sync-using-deletion, files remote deleted uploading local files. sync-using-version, files changed added locally uploaded remote, files removed locally removed remote. set, \"sync-using-version\" used. send_version_source \"manifest\" \"file\". sync-using-version synchronisation approach, whether use recorded versions objects determine changed  (\"manifest\"), download everything remote, version compare local folder (\"file\"). set, \"manifest\" used. send_conflict \"overwrite\", \"error\" \"skip\". file uploaded remote already remote. Default \"overwrite\". profile character. Profile write settings . \"default\", written _projr.yml, otherwise written _projr-<profile>.yml. default \"default\".","code":""},{"path":"https://satvilab.github.io/projr/reference/projr_yml_dest_add_osf.html","id":null,"dir":"Reference","previous_headings":"","what":"Add an OSF node as a destination — projr_yml_dest_add_osf","title":"Add an OSF node as a destination — projr_yml_dest_add_osf","text":"Add OSF node (project component) destination _projr.yml file.","code":""},{"path":"https://satvilab.github.io/projr/reference/projr_yml_dest_add_osf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add an OSF node as a destination — projr_yml_dest_add_osf","text":"","code":"projr_yml_dest_add_osf(   title,   content,   path = NULL,   structure = NULL,   path_append_label = NULL,   overwrite = FALSE,   public = FALSE,   category = NULL,   description = NULL,   id = NULL,   id_parent = NULL,   send_cue = NULL,   send_sync_approach = NULL,   send_version_source = NULL,   send_conflict = NULL,   profile = \"default\" )  projr_yml_dest_add_osf_proj(   title,   description = NULL,   content = NULL,   public = FALSE,   id = NULL )  projr_yml_dest_add_osf_comp(   title,   description = NULL,   content = NULL,   public = FALSE,   category = NULL,   id_parent = NULL,   id = NULL )"},{"path":"https://satvilab.github.io/projr/reference/projr_yml_dest_add_osf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add an OSF node as a destination — projr_yml_dest_add_osf","text":"title character. Title OSF node. GitHub releases, can use title @version, Note implies new tag created new version, use large files. supplied, automatically generated content. content character vector. Labels directories include upload. Options labels directories active projr configuration, well \"docs\", \"data\" \"code\". \"docs\" means directory documents rendered , \"data\" means files \"data\" directory, \"code\" means files tracked Git repository. path character. Path directory OSF node. structure \"latest\" \"version\". Structure remote. \"latest\", path simply contains latest versions contents. \"version\", path contain directory version. supplied, version. path_append_label logical. Whether append label path. TRUE, label appended path. FALSE, path path label. set, treated TRUE. overwrite logical. Whether rewrite existing entry title specified projr configuration file. Default TRUE. public logical. Whether OSF node public. Default FALSE. category character. category project component. following valid options: \"project\", \"analysis\", \"communication\", \"data\", \"hypothesis\", \"instrumentation\", \"methods measures\", \"procedure\", \"project\", \"software\" \"\". Default NULL. description character. Description OSF node. Default NULL. id character. id project component. Must five characters. Default NULL. id_parent character. id parent project component. Must five characters. Default NULL. send_cue TRUE/FALSE, one \"build\", \"dev\", \"patch\", \"minor\" \"major\". Minimum component bumped project build initiate upload. TRUE, set \"patch\". FALSE, never uploaded. \"build\", uploaded every build, including dev builds, dev \"build\" equivalent. send_sync_approach \"upload-\", \"upload-missing\", \"sync-using-deletiong\" \"sync-using-version\". synchronise remote. upload-, files uploaded. upload-missing, missing files uploaded. sync-using-deletion, files remote deleted uploading local files. sync-using-version, files changed added locally uploaded remote, files removed locally removed remote. set, \"sync-using-version\" used. send_version_source \"manifest\" \"file\". sync-using-version synchronisation approach, whether use recorded versions objects determine changed  (\"manifest\"), download everything remote, version compare local folder (\"file\"). set, \"manifest\" used. send_conflict \"overwrite\", \"error\" \"skip\". file uploaded remote already remote. Default \"overwrite\". profile character. Profile write settings . \"default\", written _projr.yml, otherwise written _projr-<profile>.yml. default \"default\".","code":""},{"path":"https://satvilab.github.io/projr/reference/projr_yml_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Get active projr settings and checks for validity — projr_yml_get","title":"Get active projr settings and checks for validity — projr_yml_get","text":"Gets active projr settings, merges settings resolves conflicts local (_projr-local.yml), profile (_projr-<projr>.yml - keys _projr.yml) default (_projr.yml) settings. conflicts, local settings highest precedence (.e. always preferred) default settings lowest precedence (.e. never preferred). Note error thrown active settings invalid.","code":""},{"path":"https://satvilab.github.io/projr/reference/projr_yml_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get active projr settings and checks for validity — projr_yml_get","text":"","code":"projr_yml_get(profile = NULL, check = FALSE)"},{"path":"https://satvilab.github.io/projr/reference/projr_yml_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get active projr settings and checks for validity — projr_yml_get","text":"profile character. projr profile use. NULL, active profile used. Default NULL. check logical. Whether check validity settings. Default FALSE.","code":""},{"path":"https://satvilab.github.io/projr/reference/projr_yml_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get active projr settings and checks for validity — projr_yml_get","text":"named list, settings valid.","code":""},{"path":[]},{"path":"https://satvilab.github.io/projr/reference/projr_yml_par_add.html","id":null,"dir":"Reference","previous_headings":"","what":"Add the parameters key — projr_yml_par_add","title":"Add the parameters key — projr_yml_par_add","text":"Add parameters key projr configuration.","code":""},{"path":"https://satvilab.github.io/projr/reference/projr_yml_par_add.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add the parameters key — projr_yml_par_add","text":"","code":"projr_yml_par_add(profile = \"default\")"},{"path":"https://satvilab.github.io/projr/reference/projr_yml_par_add.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add the parameters key — projr_yml_par_add","text":"profile character. NULL, default profile used. Default \"default\".","code":""},{"path":"https://satvilab.github.io/projr/reference/yml-cite.html","id":null,"dir":"Reference","previous_headings":"","what":"Set citation options — projr_yml_cite_set","title":"Set citation options — projr_yml_cite_set","text":"projr_yml_cite_set sets citation options _projr.yml. options : codemeta: whether generate codemeta.json file. cff: whether generate CITATION.cff file. Indexable GitHub Zenodo. inst-citation: whether generate CITATION file inst/ directory. project installed R package, citation data can generated citation(package = <project_name>). default leave settings unchanged. settings setting _projr.yml, default generate codemeta.json file, CITATION.cff file CITATION file inst/ directory. projr_yml_cite_set_default sets citation options default (TRUE).","code":""},{"path":"https://satvilab.github.io/projr/reference/yml-cite.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set citation options — projr_yml_cite_set","text":"","code":"projr_yml_cite_set(   all = NULL,   codemeta = NULL,   cff = NULL,   inst_citation = NULL,   simplify_identical = TRUE,   simplify_default = TRUE,   profile = \"default\" )  projr_yml_cite_set_default(   profile = \"default\",   simplify_identical = TRUE,   simplify_default = TRUE )"},{"path":"https://satvilab.github.io/projr/reference/yml-cite.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set citation options — projr_yml_cite_set","text":"logical. Whether set options TRUE FALSE. NULL, codemeta, cff inst_citation used. Default NULL. codemeta logical. Whether generate codemeta.json file. NULL, setting changed. cff logical. Whether generate CITATION.cff file. NULL, setting changed. inst_citation logical. Whether generate CITATION file inst/ directory. NULL, setting changed. simplify_identical logical. TRUE, settings cite: TRUE cite: FALSE written _projr.yml. Default TRUE. simplify_default logical. TRUE, settings equl default (TRUE), settings recorded projr configuration file (default equal ). profile character. profile write . Default \"default\", case writes _projr.yml.","code":""},{"path":"https://satvilab.github.io/projr/reference/yml-cite.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set citation options — projr_yml_cite_set","text":"","code":"if (FALSE) { # \\dontrun{ # set all to TRUE projr_yml_cite_set(all = TRUE)  # set all to FALSE projr_yml_cite_set(all = FALSE)  # set only cff to FALSE projr_yml_cite_set(cff = FALSE)  # revert to defaults projr_yml_cite_set_default() } # }"},{"path":"https://satvilab.github.io/projr/reference/yml-git.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Git options — projr_yml_git_set","title":"Set Git options — projr_yml_git_set","text":"projr_yml_git_set sets Git options project. options : commit: whether commit changes automatically upon project builds. add_untracked: whether add untracked files automatically upon project builds. push: whether push changes automatically upon project builds. default leave settings unchanged. settings setting _projr.yml, default commit, add untracked files push. projr_yml_git_set_default sets Git options default (TRUE).","code":""},{"path":"https://satvilab.github.io/projr/reference/yml-git.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Git options — projr_yml_git_set","text":"","code":"projr_yml_git_set(   all = NULL,   commit = NULL,   add_untracked = NULL,   push = NULL,   simplify_identical = TRUE,   simplify_default = TRUE,   profile = \"default\" )  projr_yml_git_set_default(   profile = \"default\",   simplify_identical = TRUE,   simplify_default = TRUE )"},{"path":"https://satvilab.github.io/projr/reference/yml-git.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Git options — projr_yml_git_set","text":"logical. Whether set options TRUE FALSE. NULL, commit, add_untracked push used. Default NULL. commit logical. Whether commit changes automatically upon project builds. NULL, setting changed. Default NULL. add_untracked logical. Whether add untracked files automatically upon project builds. NULL, setting changed. Default NULL. push logical. Whether push changes automatically upon project builds. NULL, setting changed. Default NULL. simplify_identical logical. TRUE, settings (commit, push add_untracked), git: TRUE git: FALSE written _projr.yml. Default TRUE. simplify_default logical. TRUE, settings default (TRUE), settings removed _projr.yml. Default TRUE. profile character. Profile add script . \"default\"`` (default), script added default profile, _projr.yml. NULL, active profile used (.e merge _projr-local.yml, _projr-.ymland_projr.yml) written _projr.yml. another character vector, corresponding profile used written _projr-.yml`.","code":""},{"path":"https://satvilab.github.io/projr/reference/yml-git.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set Git options — projr_yml_git_set","text":"","code":"if (FALSE) { # \\dontrun{ # set all to TRUE projr_yml_git_set(all = TRUE)  # set all to FALSE projr_yml_git_set(all = FALSE)  # set only add_untracked to FALSE projr_yml_git_set(add_untracked = FALSE)  # revert to defaults projr_yml_git_set_default() } # }"},{"path":"https://satvilab.github.io/projr/reference/yml-script.html","id":null,"dir":"Reference","previous_headings":"","what":"Build script-related functions — projr_yml_script_add","title":"Build script-related functions — projr_yml_script_add","text":"Convenience functions add remove scripts run build. projr_yml_script_add: Add script run build. projr_yml_script_rm: Remove scripts run. projr_yml_script_add_pre projr_yml_script_add_post wrappers around projr_yml_script_add set stage argument \"pre\" \"post\", respectively. projr_yml_script_rm_all removes scripts.","code":""},{"path":"https://satvilab.github.io/projr/reference/yml-script.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build script-related functions — projr_yml_script_add","text":"","code":"projr_yml_script_add(   path,   title,   stage,   cue = NULL,   overwrite = TRUE,   profile = \"default\" )  projr_yml_script_rm(title, path = NULL, profile = \"default\")  projr_yml_script_rm_all(profile = \"default\")  projr_yml_script_add_pre(   path,   title,   cue = NULL,   overwrite = TRUE,   profile = \"default\" )  projr_yml_script_add_post(   path,   title,   cue = NULL,   overwrite = TRUE,   profile = \"default\" )"},{"path":"https://satvilab.github.io/projr/reference/yml-script.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build script-related functions — projr_yml_script_add","text":"path character vector. Path(s) scripts, relative project root (absolute). title character. Title set scripts. Initial trailing spaces removed, middle spaces converted dashes. example, \" b \" converted \"-b\". ` stage \"pre\" \"post\". Whether run script build. cue \"build\", \"dev\", \"patch\", \"minor\" \"major\". minimum build level triggers scripts. \"build\" \"dev\" equivalent, always trigger scripts. overwrite logical. Whether overwrite script settings title projr configuration file. FALSE already exists key build/script name title, error thrown. Default TRUE. profile character. Profile add script . \"default\"`` (default), script added default profile, _projr.yml`.","code":""},{"path":"https://satvilab.github.io/projr/reference/yml-script.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Build script-related functions — projr_yml_script_add","text":"Within stage (pre- post-build), scripts run order set _projr.yml. run environment build process. pre-build scripts run immediately bumping project version (done) immediately committing present state code Git. post-build scripts run immediately committing present state code Git, distributing project artefacts remotes.","code":""},{"path":"https://satvilab.github.io/projr/news/index.html","id":"projr-0089002","dir":"Changelog","previous_headings":"","what":"projr 0.0.8.9002","title":"projr 0.0.8.9002","text":"Added NEWS.md file track changes package.","code":""}]
